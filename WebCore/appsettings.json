{
  /*和每个数据库的dbcontext类名对应*/
  "ConnectionStrings": {
    "TestDbContext": "Server=192.168.3.16;Database=Test;User ID=ca;Password=ca123",
    "Test2DbContext": "Server=192.168.3.16;Database=Test2;User ID=ca;Password=ca123"

  },
  "OptionsAppSetting": {
    "Items": {
      "EnableCircuitBreaker": "true", /*是否启用熔断保护*/
      "EnableFallBack": "true" /*是否启用降级*/
    }
  },
  /*服务信息，用于服务注册到服务发现*/
  "OptionsServiceInfo": {
    "Enable": false,
    "ServiceName": "test1",
    "ServiceIP": "192.168.3", //当前服务对外的ip，从当前主机所有网卡里面选取，为空默认匹配第一个，也支持模糊匹配，会从当前主机网卡的所有ip中模糊匹配“ServiceIP%”
    "ServicePort": "8022",
    "RegisterIP": "172.17.0.6", //要注册到服务发现的ip
    "RegisterPort": "8500",
    "Interval": 10 //心跳检测间隔时间，单位秒
  },
  "OptionsHealth": {
    "Router": "/api/health",
    "ResultValue": "{\"status\":\"true\"}",
    "ResultType": "json"
  },
  "GlobalSys": {
    "AppUrl": [ "http://*:8022" ], //"http://*:8080"
    "ServerMode": "Kestrel", /*HttpSys Kestrel*/
    "MaxRequestBodySize": 1024000000 /*字节*/
  },
  /*要加载DbContexts,key和ConnectionStrings的key对应；value可以为sqlserver，oracle，mysql*/
  "OptionsRepository": {
    "DbContexts": {
      "TestDbContext": "sqlserver",
      "Test2DbContext": "sqlserver"
    }
  },
  /*添加新的mime,因为是服务，所以不支持热更新*/
  "OptionsMIME": {
    "DictMIME": {
      ".image": "image/png",
      ".img": "image/png"
    }

  },
  /*缓存*/
  "OptionsCache": {
    "Enable": true,
    "Expiration": "60", /*多长时间过期，秒*/
    "AssemblyName": "WebCore.Common", /*程序集名，反射用*/
    "ClassName": "Cache.CacheMemoryHelper"
  },
  /*上传相关的配置,支持热更新*/
  "OptionsUpload": [
    {
      "Router": "/UploadService/Local", /*匹配路由*/
      "MaxLength": "10240000", /*kb*/
      "Extension": [ "jpg", "mp4", "zip", "docx", "sql", "pdf" ],
      "Root": "", /*设置根目录,如果为空，文件总是保存在项目根目录；比如d:/project/  数据库就只保存path的相对路径， 如果附件是上传到项目根目录下可设置为空，否则保存在其他位置，就要设置这个，以防止服务器迁移。不支持参数; */
      "Path": "/upload/$directoryname/$ticks.$ext", /*保存在数据库的相对路径，以/开头，支持参数*/
      "AssemblyName": "WebCore.Component", /*程序集名，反射用*/
      "ClassName": "Providers.Upload.UploadLocalProvider"
    }
  ],
  /*上传相关的配置,支持热更新，但代码未配置*/
  "OptionsDownload": [
    {
      "Router": "/DownloadService/Local", /*匹配路由*/
      "Root": "", /*设置根目录,如果为空，文件总是保存在项目根目录；比如d:/project/  数据库就只保存path的相对路径， 如果附件是上传到项目根目录下可设置为空，否则保存在其他位置，就要设置这个，以防止服务器迁移 */
      "AssemblyName": "WebCore.Component", /*程序集名，反射用*/
      "ClassName": "Providers.Download.DownloadLocalProvider"
    }
  ],
  /*删除文件相关的配置,支持热更新，但代码未配置*/
  "OptionsRemoveFile": [
    {
      "Router": "/RemoveFileService/Local", /*匹配路由*/
      "Root": "", /*设置根目录,如果为空，文件总是保存在项目根目录；比如d:/project/  数据库就只保存path的相对路径， 如果附件是上传到项目根目录下可设置为空，否则保存在其他位置，就要设置这个，以防止服务器迁移 */
      "AssemblyName": "WebCore.Component", /*程序集名，反射用*/
      "ClassName": "Providers.RemoveFile.RemoveFileLocalProvider"
    }
  ],
  /*SwaggerDoc信息,可以配置多个SwaggerDocs，在需要生成api文档的类或方法上加特性（ApiClassGroup，ApimethodGroup），特性的groupname即为服务名，只有配置了特性的类或方法才会生成文档*/
  "OptionsSwagger": {
    "XmlCommentsName": "WebCore.xml", //xml说明文件的名称，ide通过webapi注释生产的xml说明，需要在项目——属性——生成——勾选“xml文档文件”
    "SwaggerDocs": {
      "User": { //key为服务名，要在每个服务方法上通过自定义的特性，特性的groupname即为该key
        "Title": "用户服务",
        "Version": "v1.0",
        "Description": "用于查询用户相关信息",
        "TermsOfService": null,
        "Contact": {
          "Name": "ChenGuang",
          "Url": "http://www.chenguang.com",
          "Email": "xxxx@qq.com"
        },
        "License": {
          "Name": "许可证",
          "Url": "http://www.baidu.com"
        }
      },
      "File": { //key为服务名，要在每个服务方法上通过自定义的特性，特性的groupname即为该key
        "Title": "文件服务",
        "Version": "v1.0",
        "Description": "用于上传删除下载查询文件",
        "TermsOfService": null,
        "Contact": {
          "Name": "ChenGuang",
          "Url": "http://www.chenguang.com",
          "Email": "xxxx@qq.com"
        },
        "License": {
          "Name": "许可证",
          "Url": "http://www.baidu.com"
        }
      }
    }
  }
}
